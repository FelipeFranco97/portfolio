---
import { getLangFromUrl, useTranslations } from '../i18n/utils'
import { Menu, X, Download } from '@lucide/astro'

const lang = getLangFromUrl(Astro.url)
const t = useTranslations(lang)
---

<header>
  <div class='header-container'>
    <button class='menu-button' aria-label='Menú'>
      <Menu />
    </button>
    <nav class='nav-menu'>
      <button class='close-button' aria-label='Cerrar menú'>
        <X />
      </button>
      <ul>
        <li><a href='#inicio'>{t('header.home')}</a></li>
        <hr class='divider' />
        <li><a href='#about-me'>{t('header.about')}</a></li>
        <hr class='divider' />
        <li><a href='#projects'>{t('header.projects')}</a></li>
        <hr class='divider' />
      </ul>

      <div class='bottom-part'>
        <hr class='bottom-divider' />
        <a
          href={`/CV_Juan_Felipe_Franco_${lang}.pdf`}
          download
          class='download-cv'
        >
          <Download size={24} />
          {t('header.downloadCV')}
        </a>
      </div>
    </nav>
  </div>
</header>
<div class='overlay'></div>

<style>
  :root {
    --header-height: calc(30px + 4rem);
  }

  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  header {
    position: relative;
    width: 100%;
    padding: 2rem;
  }

  .header-container {
    display: flex;
    justify-content: flex-end;
    align-items: center;
    position: relative;
    z-index: 100;
    height: 30px;
  }

  .menu-button {
    background: none;
    border: none;
    cursor: pointer;
    display: block;
    z-index: 10;
    color: var(--text);
  }

  .overlay {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 90;
    opacity: 0;
    transition: opacity 0.3s ease;
    backdrop-filter: blur(1px);
  }

  .overlay.show {
    display: block;
    opacity: 1;
  }

  .nav-menu {
    display: none;
    position: fixed;
    top: 0;
    right: -50vw;
    left: auto;
    width: 45vw;
    height: 100dvh;
    background-color: var(--background-secondary);
    background-image: var(--background-image-secondary);
    z-index: 95;
    box-shadow: -4px 0 6px var(--shadow);
    display: flex;
    flex-direction: column;
  }

  .download-cv {
    position: relative;
    margin: 0 auto 2rem auto;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 0.75rem;
    background-color: var(--primary);
    color: white;
    border-radius: 8px;
    text-decoration: none;
    font-weight: 500;
    transition: background-color 0.3s ease;
  }

  .download-cv svg {
    width: 18px;
    min-width: 18px;
    height: 18px;
    color: white;
    flex-shrink: 0;
  }

  .download-cv:hover {
    background-color: var(--primary-light);
    color: white;
  }

  .nav-menu.show {
    display: flex;
    justify-content: space-between;
    animation: slideLeft 0.3s ease-out forwards;
    padding: 0 1.5rem;
  }

  .nav-menu.closing {
    animation: slideRight 0.3s ease-out forwards;
  }

  @keyframes slideLeft {
    from {
      right: -50vw;
    }
    to {
      right: 0;
    }
  }

  @keyframes slideRight {
    from {
      right: 0;
    }
    to {
      right: -50vw;
    }
  }

  .close-button {
    position: absolute;
    top: 1rem;
    right: 1rem;
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.5rem;
    color: var(--text);
  }

  ul {
    display: flex;
    flex-direction: column;
    list-style: none;
    margin-top: 7rem;
  }

  .divider {
    margin: 1rem 0;
    opacity: 0.5;
  }

  .bottom-divider {
    margin: 1rem 0;
    opacity: 0.5;
  }

  a {
    text-decoration: none;
    color: var(--text);
    transition: color 0.3s ease;
  }

  a:hover {
    color: var(--primary);
  }

  @media (min-width: 768px) {
    .menu-button {
      display: none;
    }

    .overlay {
      display: none !important;
    }

    .nav-menu {
      display: block;
      position: static;
      height: auto;
      padding: 0;
      background-color: transparent;
      box-shadow: none;
    }

    ul {
      flex-direction: row;
      gap: 2rem;
    }

    a {
      font-size: 1.1rem;
    }

    .close-button {
      display: none;
    }
  }
</style>

<script>
  const menuButton = document.querySelector('.menu-button')
  const closeButton = document.querySelector('.close-button')
  const navMenu = document.querySelector('.nav-menu')
  const overlay = document.querySelector('.overlay')
  const menuLinks = document.querySelectorAll('.nav-menu a')

  menuButton?.addEventListener('click', () => {
    navMenu?.classList.remove('closing')
    navMenu?.classList.toggle('show')
    overlay?.classList.toggle('show')
  })

  function closeMenu() {
    if (navMenu?.classList.contains('show')) {
      navMenu.classList.add('closing')
      overlay?.classList.remove('show')

      setTimeout(() => {
        navMenu.classList.remove('show')
        navMenu.classList.remove('closing')
      }, 300)
    }
  }

  menuLinks.forEach((link) => {
    link.addEventListener('click', closeMenu)
  })

  closeButton?.addEventListener('click', closeMenu)
  overlay?.addEventListener('click', closeMenu)
</script>
